---

## Install pyenv - Unique OS specific task is the first one 

- name: ensure mandatory packages are installed
  apt:
    pkg:
    - make
    - build-essential
    - libssl-dev
    - zlib1g-dev
    - libbz2-dev
    - libreadline-dev
    - libsqlite3-dev 
    - wget
    - curl
    - llvm
    - libncurses5-dev
    - libncursesw5-dev
    - xz-utils
    - tk-dev
    - libffi-dev
    - liblzma-dev
    - python-openssl
  become: true

- name: Clone pyenv
  git:
    repo: https://github.com/pyenv/pyenv.git
    dest: "{{ pyenv_root }}"
    version: "{{ pyenv_version }}"

- name: Clone pyenv-virtualenv
  git:
    repo: https://github.com/pyenv/pyenv-virtualenv.git
    dest: "{{ pyenv_root }}/plugins/pyenv-virtualenv"
    version: "{{ pyenv_virtualenv_version }}"

- name: Create .pyenvrc
  template:
    src: ".pyenvrc.j2"
    dest: "{{ pyenv_root }}/.pyenvrc"
    mode: "0644"

- name: Install Python interpreters
  shell: >-
    . {{ pyenv_root }}/.pyenvrc &&
    pyenv install {{ item }}
  args:
    executable: "{{ pyenv_install_shell | default(omit) }}"
    creates: "{{ pyenv_root }}/versions/{{ item }}/bin/python"
  with_items: "{{ pyenv_python_versions }}"

- name: Set pyenv global version to '{{ pyenv_global }}'
  shell: >-
    . {{ pyenv_root }}/.pyenvrc &&
    pyenv global {{ pyenv_global }}
  args:
    executable: "{{ pyenv_install_shell | default(omit) }}"

- name: Set path to .bashrc
  set_fact:
    pyenv_bashrc_path: "{{ pyenv_home }}/.bashrc"
  when: pyenv_bashrc_path is undefined

- name: Check whether .bashrc file exists
  stat:
    path: "{{ pyenv_bashrc_path }}"
  register: pyenv_bashrc_st

- name: Resolve .bashrc symlink
  set_fact:
    pyenv_bashrc_path: "{{ pyenv_bashrc_st.stat.lnk_source }}"
  when: pyenv_bashrc_st.stat.exists and pyenv_bashrc_st.stat.islnk

- name: Check whether .pyenvrc is loaded in .bashrc
  command: grep -EFq 'source {{ pyenv_root }}/.pyenvrc' {{ pyenv_bashrc_path }}
  register: check_bashrc
  ignore_errors: true
  changed_when: false
  failed_when: false
  when: pyenv_bashrc_st.stat.exists

- name: Load pyenv in .bashrc
  blockinfile:
    dest: "{{ pyenv_bashrc_path }}"
    marker: "# {mark} ANSIBLE MANAGED BLOCK: pyenv"
    block: |
      if [ -e "{{ pyenv_root }}/.pyenvrc" ]; then
        source {{ pyenv_root }}/.pyenvrc
      fi
  when: pyenv_bashrc_st.stat.exists and check_bashrc.rc != 0
