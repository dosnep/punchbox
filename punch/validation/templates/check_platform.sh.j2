#! /bin/bash

RED="\033[31m"
GREEN="\033[32m"
YELLOW="\033[33m"
BLUE="\033[34m"
RESET="\033[0m"

echo -e "${BLUE}INFO:${RESET} Put platform and tenants configurations in zookeeper"
punchplatform-putconf.sh --zookeeper-cluster-name common --platform -v
punchplatform-putconf.sh --zookeeper-cluster-name common --tenant mytenant -v

echo -e "${BLUE}INFO:${RESET} Push Elasticsearch templates"
punchplatform-push-es-templates.sh --directory $PUNCHPLATFORM_CONF_DIR/resources/elasticsearch/templates/ --url {{ punch.elasticsearch.cluster_production_transport_address }}:9200

echo -e "${BLUE}INFO:${RESET} Start channels from tenant mytenant"
punchctl -t mytenant start --channel apache_httpd
punchctl -t mytenant start --channel aggregation

echo -e "${BLUE}INFO:${RESET} Launch log injectors"
# For loop to send logs on each storm/shiva nodes 
{% for server in punch.storm.slaves %}
nohup punchplatform-log-injector.sh -c $PUNCHPLATFORM_CONF_DIR/resources/injectors/mytenant/apache_httpd_injector.json -H {{ server }} &
{% endfor %}

echo -e "${BLUE}INFO:${RESET} Wait for 10 min, logs are being inserted in platform"
sleep 600
pkill -f org.thales.punch.injector.Main >/dev/null 2>/dev/null

echo -e "${BLUE}INFO:${RESET} Check results"
OUTPUT=$($PUNCHPLATFORM_CONF_DIR/applicative_monitoring.sh --url {{ punch.elasticsearch.cluster_production_transport_address }}:9200 -i mytenant-agg* -b '{"query":{"bool":{"must":[{"range":{"timestamp":{"lt": "now","gte": "now-5w"}}}]}}}')
HOST={{ hostname }}
OS={{ os }}

curl -X POST -H 'Content-type: application/json' --data '{"text":"5.7 validation from '"${HOST}"' on '"${OS}"' \n '"${OUTPUT}"'", "username": "elastalert", "icon_emoji": ":punchlogo2:"}' {{ webhook }}

echo -e "${BLUE}INFO:${RESET} End of check platform"

exit
