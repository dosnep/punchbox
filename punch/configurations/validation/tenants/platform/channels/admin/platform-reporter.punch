/**
 * This punchlet takes events coming from a Kafka topic. 
 * Here, we re-do the "Y" to send events to the right Elasticsearch index
 */
{
    String docType = "undetermined";
	String indexPrefix = "platform-errors-";
    String tenant = "default";

    if ( [logs][log][type] ) {
		docType = [logs][log][type];
    // metricbeat
    } else if ( [logs][log][agent][type] ) { 
		docType =  [logs][log][agent][type]; 
	} 
    // plan-logs (ecs)
    else if ( [logs][log][labels][runtime] ) { 
		docType =  [logs][log][labels][runtime]; 
	}
    // gateway
    else if ( [logs][log][target][type] ) { 
		docType =  [logs][log][target][type]; 
	}

    String dateString = null;
	if ([logs][log][@timestamp]) { 
		dateString = [logs][log][@timestamp];
	}

    switch (docType) {
        case "platform-monitoring":
            indexPrefix = "platform-monitoring-";
            break;
        case "platform-health":
            indexPrefix = "platform-health-";
            break;
        case "metricbeat":
            indexPrefix = "platform-metricbeat-" + [logs][log][agent][version] + "-";
            break;
        case "channels-monitoring":
            indexPrefix = "channels-monitoring-";
            break;
        case "gateway":
            if ([logs][log][platform][tenant]){
                tenant = [logs][log][platform][tenant];
            }
			indexPrefix = tenant + "-gateway-logs-";
			break;
        case "punch":
            indexPrefix = "platform-logs-";
            break;
        case "storm":
            if ([logs][log][platform][tenant]){
                tenant = [logs][log][platform][tenant];
            }
			indexPrefix = tenant + "-metrics-";
			break;
        case "spark":
            if ([logs][log][platform.tenant]){
                tenant = [logs][log][platform.tenant];
            }
            else if ([logs][log][platform][tenant]){
                tenant = [logs][log][platform][tenant];
            }
			indexPrefix = tenant + "-metrics-";
			break;
        default:
            String errorMessage =  "Unable to dispatch unknown monitoring document type forwarded from Kafka '" + [logs][log].toString() + "'.";
			throw new PunchRuntimeException(errorMessage);
        }
    String elasticsearch_date = "nodate-errors";
	if (dateString != null) {
		elasticsearch_date = date("yyyy-MM-dd", "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'").on(dateString).get();  
	}
	[logs][target_index]  = indexPrefix + elasticsearch_date;

}